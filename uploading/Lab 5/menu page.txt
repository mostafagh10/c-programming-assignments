#include <stdio.h>
#include <stdlib.h>
#include <windows.h>
#include <dos.h>
#include <dir.h>
void SetColor(int ForgC){
     WORD wColor;

      HANDLE hStdOut = GetStdHandle(STD_OUTPUT_HANDLE);
      CONSOLE_SCREEN_BUFFER_INFO csbi;

                       //We use csbi for the wAttributes word.
     if(GetConsoleScreenBufferInfo(hStdOut, &csbi))
     {
                 //Mask out all but the background attribute, and add in the forgournd     color
          wColor = (csbi.wAttributes & 0xF0) + (ForgC & 0x0F);
          SetConsoleTextAttribute(hStdOut, wColor);
     }
     return;
 }
  void gotoxy(int x,int y)
 {
   COORD coord={0,0};
   coord.X=x;
   coord.Y=y;
   SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE),coord);
 }

// User Define Struct
struct student {
    char name[20];
    char gender;
    int age;
    int id;
};
void display_struct_Student(struct student s);
void scan_struct_Students(struct student s[],int size);
void print_struct_Students(struct student s[],int size );
int counting = 0;
int main()
{
    int position=0,row,col,flag=0;
    struct student students[100];
    for(int i=0 ; flag!=1  ;i++){
    system("cls");
     if(position == 0){
        row=2,col=5;
        gotoxy(col,row);
        SetColor(4);
        printf("new");
        row=5,col=5;
        gotoxy(col,row);
        SetColor(14);
        printf("display");
        row=8,col=5;
        gotoxy(col,row);
        SetColor(14);
        printf("exit");
     }else if(position == 1){
        row=2,col=5;
        gotoxy(col,row);
        SetColor(14);
        printf("new");
        row=5,col=5;
        gotoxy(col,row);
        SetColor(4);
        printf("display");
        row=8,col=5;
        gotoxy(col,row);
        SetColor(14);
        printf("exit");
     }else if(position == 2){
        row=2,col=5;
        gotoxy(col,row);
        SetColor(14);
        printf("new");
        row=5,col=5;
        gotoxy(col,row);
        SetColor(14);
        printf("display");
        row=8,col=5;
        gotoxy(col,row);
        SetColor(4);
        printf("exit");
     }

    char x;
    x=getch();
    /* for enter button */
    if(x == 13){
       system("cls");
       switch(position){
       case 0 :
            gotoxy(5,2);
            //printf("new");
            scan_struct_Students(students,i);
            //getch();
            break;
      case 1 :
            gotoxy(5,5);
            //printf("display");
            print_struct_Students(students,counting);
            getch();
            break;
      case 2 :
            gotoxy(5,8);
            printf("if you want to exit press Y or y ....");
            char s = getch();
            if(s == 'y' || s == 'Y'){
                flag = 1;
            }
            break;

       }
    }else{
    x=getch();
    /* for bottom button  */
    if(x == 80){
        if(position <= 1){
            position++;
        }
        else{
            position = 0;
        }
     }
    /* for up button */
    else if(x == 72){
         if(position > 0){
            position--;
         }else{
             position = 2;
         }
    }
    }

}


    return 0;
}

void scan_struct_Students(struct student s[],int size ){
    int flag2=0;
    while(flag2!= 1){
    printf("\n do you want add new student ? y/n");
    char check;
    check = getch();
    if(check == 'n' || check == 'N'){
        flag2=1;
    }else{
    int i = counting;
        printf("\n Enter name [%d]",i+1);
        fgets(s[i].name,20,stdin);
        printf("Enter age [%d]",i+1);
        scanf("%d",&s[i].age);
        printf("Enter ID [%d]",i+1);
        scanf("%d",&s[i].id);
        printf("Enter Gender [%d]",i+1);
        scanf(" %c",&s[i].gender);
        fflush(stdin);
    counting++;
    }
    }

}
void print_struct_Students(struct student s[],int size ){
    printf("----------------- Display -------------------- \n");
    for(int i=0; i<size; i++){
          printf("name[%d] = %s \n",i+1,s[i].name);
          printf("gender[%d] = %c \n",i+1,s[i].gender);
          printf("age [%d]=  %d \n",i+1,s[i].age);
            printf("id [%d] =  %d \n",i+1,s[i].id);
    }

}


